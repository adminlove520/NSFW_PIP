name: 每日视频下载与发布

on:
  # 每日UTC时间执行
  schedule:
    - cron: '0 0 * * *'
  # 允许手动触发
  workflow_dispatch:
    inputs:
      download_count:
        description: '下载数量'
        required: false
        default: '10'
        type: string
      thread_count:
        description: '线程数量'
        required: false
        default: '4'
        type: string

# 设置权限
permissions:
  contents: write  # 需要写入权限来创建release和上传资产

jobs:
  download-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          # 从requirements.txt安装依赖
          pip install -r requirements.txt
      
      - name: 下载视频
        run: |
          # 获取当前UTC日期
          DATE_UTC=$(date -u +"%Y%m%d")
          DATE_HYPHEN=$(date -u +"%Y-%m-%d")
          
          # 设置下载目录和参数
          DOWNLOAD_DIR="downloads"
          THREAD_COUNT=${{ github.event.inputs.thread_count || '4' }}
          DOWNLOAD_COUNT=${{ github.event.inputs.download_count || '10' }}
          
          echo "开始下载 $DOWNLOAD_COUNT 个视频，使用 $THREAD_COUNT 线程..."
          echo "当前UTC日期: $DATE_UTC"
          
          # 设置环境变量来覆盖Python中的日期
          export CURRENT_DATE="$DATE_UTC"
          python downloader.py -o "$DOWNLOAD_DIR" -t "$THREAD_COUNT" -n "$DOWNLOAD_COUNT" --date-subdir
          
          # 保存日期变量供后续步骤使用
          echo "DATE_UTC=$DATE_UTC" >> $GITHUB_ENV
          echo "DATE_HYPHEN=$DATE_HYPHEN" >> $GITHUB_ENV
          echo "DOWNLOAD_DIR=$DOWNLOAD_DIR" >> $GITHUB_ENV
          # 设置带前缀的日期格式
          echo "PREFIXED_DATE=雅俗共赏-$DATE_HYPHEN" >> $GITHUB_ENV
          echo "PREFIXED_DATE_UTC=雅俗共赏-$DATE_UTC" >> $GITHUB_ENV
      
      - name: 打包视频
        run: |
          # 检查下载目录结构
          echo "下载目录结构:"
          ls -la "$DOWNLOAD_DIR"
          
          # 打包视频文件
          TAR_NAME="${{ env.PREFIXED_DATE }}.tar.gz"
          echo "正在打包为 $TAR_NAME..."
          
          # 确保目录存在且正确打包
          if [ -d "$DOWNLOAD_DIR/雅俗共赏_${{ env.DATE_UTC }}" ]; then
            tar -czf "$TAR_NAME" -C "$DOWNLOAD_DIR" "雅俗共赏_${{ env.DATE_UTC }}"
            echo "成功打包目录"
          else
            echo "警告: 目录不存在，检查下载是否成功"
            # 如果没有特定目录，则尝试打包整个下载目录
            tar -czf "$TAR_NAME" "$DOWNLOAD_DIR"
          fi
          
          # 显示创建的文件
          ls -la "$TAR_NAME"
          
          # 保存打包文件名
          echo "TAR_NAME=$TAR_NAME" >> $GITHUB_ENV
          echo "TAG_NAME=${{ env.PREFIXED_DATE_UTC }}" >> $GITHUB_ENV
      
      - name: 创建GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.TAG_NAME }}"
          name: "${{ env.PREFIXED_DATE }}"
          body: |
            每日自动下载的视频集合
            
            - 日期: ${{ env.DATE_HYPHEN }} (UTC)
            - 数量: ${{ github.event.inputs.download_count || '10' }}
            - 线程: ${{ github.event.inputs.thread_count || '4' }}
          files: "./${{ env.TAR_NAME }}"
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 提交下载内容到仓库
        if: success()
        run: |
          # 配置Git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # 添加下载的内容
          git add ${{ env.DOWNLOAD_DIR }}/
          
          # 检查是否有更改
          if git diff --cached --quiet; then
            echo "没有新的内容需要提交"
          else
            # 提交更改
            git commit -m "添加每日下载内容 - ${{ env.DATE_HYPHEN }}"
            git push origin main
          fi